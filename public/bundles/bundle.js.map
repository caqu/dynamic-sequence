{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/lib/parseq.js","../../src/component_list.js","../../src/app.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// parseq.js\r\n// Douglas Crockford\r\n// 2018-09-05\r\n\r\n// Better living thru eventuality!\r\n\r\n// You can access the parseq object in your module by importing it.\r\n//      import parseq from \"./parseq.js\";\r\n\r\n/*jslint node */\r\n\r\n/*property\r\n    concat, create, evidence, fallback, forEach, freeze, isArray, isSafeInteger,\r\n    keys, length, min, parallel, parallel_object, pop, push, race, sequence,\r\n    some\r\n*/\r\n\r\nfunction make_reason(factory_name, excuse, evidence) {\r\n\r\n// Make a reason object. These are used for exceptions and cancellations.\r\n// They are made from Error objects.\r\n\r\n    const reason = new Error(\"parseq.\" + factory_name + (\r\n        excuse === undefined\r\n        ? \"\"\r\n        : \": \" + excuse\r\n    ));\r\n    reason.evidence = evidence;\r\n    return reason;\r\n}\r\n\r\nfunction check_callback(callback, factory_name) {\r\n    if (typeof callback !== \"function\" || callback.length !== 2) {\r\n        throw make_reason(factory_name, \"Not a callback.\", callback);\r\n    }\r\n}\r\n\r\nfunction check_requestor_array(requestor_array, factory_name) {\r\n\r\n// A requestor array contains only requestors. A requestor is a function that\r\n// takes wun or two arguments: 'callback' and optionally 'initial_value'.\r\n\r\n    if (\r\n        !Array.isArray(requestor_array)\r\n        || requestor_array.length < 1\r\n        || requestor_array.some(function (requestor) {\r\n            return (\r\n                typeof requestor !== \"function\"\r\n                || requestor.length < 1\r\n                || requestor.length > 2\r\n            );\r\n        })\r\n    ) {\r\n        throw make_reason(\r\n            factory_name,\r\n            \"Bad requestors array.\",\r\n            requestor_array\r\n        );\r\n    }\r\n}\r\n\r\nfunction run(\r\n    factory_name,\r\n    requestor_array,\r\n    initial_value,\r\n    action,\r\n    timeout,\r\n    time_limit,\r\n    throttle = 0\r\n) {\r\n\r\n// The 'run' function does the work that is common to all of the Parseq\r\n// factories. It takes the name of the factory, an array of requestors, an\r\n// initial value, an action callback, a timeout callback, a time limit in\r\n// milliseconds, and a throttle.\r\n\r\n// If all goes well, we call all of the requestor functions in the array. Each\r\n// of them  might return a cancel function that is kept in the 'cancel_array'.\r\n\r\n    let cancel_array = new Array(requestor_array.length);\r\n    let next_number = 0;\r\n    let timer_id;\r\n\r\n// We need 'cancel' and 'start_requestor' functions.\r\n\r\n    function cancel(reason = make_reason(factory_name, \"Cancel.\")) {\r\n\r\n// Stop all unfinished business. This can be called when a requestor fails.\r\n// It can also be called when a requestor succeeds, such as 'race' stopping\r\n// its losers, or 'parallel' stopping the unfinished optionals.\r\n\r\n// If a timer is running, stop it.\r\n\r\n        if (timer_id !== undefined) {\r\n            clearTimeout(timer_id);\r\n            timer_id = undefined;\r\n        }\r\n\r\n// If anything is still going, cancel it.\r\n\r\n        if (cancel_array !== undefined) {\r\n            cancel_array.forEach(function (cancel) {\r\n                try {\r\n                    if (typeof cancel === \"function\") {\r\n                        return cancel(reason);\r\n                    }\r\n                } catch (ignore) {}\r\n            });\r\n            cancel_array = undefined;\r\n        }\r\n    }\r\n\r\n    function start_requestor(value) {\r\n\r\n// The 'start_requestor' function is not recursive, exactly. It does not\r\n// directly call itself, but it does return a function that might call\r\n// 'start_requestor'.\r\n\r\n// Start the execution of a requestor, if there are any still waiting.\r\n\r\n        if (\r\n            cancel_array !== undefined\r\n            && next_number < requestor_array.length\r\n        ) {\r\n\r\n// Each requestor has a number.\r\n\r\n            let number = next_number;\r\n            next_number += 1;\r\n\r\n// Call the next requestor, passing in a callback function,\r\n// saving the cancel function that the requestor might return.\r\n\r\n            const requestor = requestor_array[number];\r\n            try {\r\n                cancel_array[number] = requestor(\r\n                    function start_requestor_callback(value, reason) {\r\n\r\n// This callback function is called by the 'requestor' when it is done.\r\n// If we are no longer running, then this call is ignored.\r\n// For example, it might be a result that is sent back after the time\r\n// limit has expired. This callback function can only be called wunce.\r\n\r\n                        if (\r\n                            cancel_array !== undefined\r\n                            && number !== undefined\r\n                        ) {\r\n\r\n// We no longer need the cancel associated with this requestor.\r\n\r\n                            cancel_array[number] = undefined;\r\n\r\n// Call the 'action' function to let the requestor know what happened.\r\n\r\n                            action(value, reason, number);\r\n\r\n// Clear 'number' so this callback can not be used again.\r\n\r\n                            number = undefined;\r\n\r\n// If there are any requestors that are still waiting to start, then\r\n// start the next wun. If the next requestor is in a sequence, then it\r\n// gets the most recent 'value'. The others get the 'initial_value'.\r\n\r\n                            return start_requestor(\r\n                                factory_name === \"sequence\"\r\n                                ? value\r\n                                : initial_value\r\n                            );\r\n                        }\r\n                    },\r\n                    value\r\n                );\r\n\r\n// Requestors are required to report their failure thru the callback.\r\n// They are not allowed to throw exceptions. If we happen to catch wun,\r\n// it is treated as a failure.\r\n\r\n            } catch (exception) {\r\n                action(undefined, exception, number);\r\n                number = undefined;\r\n                start_requestor(value);\r\n            }\r\n        }\r\n    }\r\n\r\n// With the 'cancel' and the 'start_requestor' functions in hand,\r\n// we can now get to work.\r\n\r\n// If a timeout was requested, start the timer.\r\n\r\n    if (time_limit !== undefined) {\r\n        if (typeof time_limit === \"number\" && time_limit >= 0) {\r\n            if (time_limit > 0) {\r\n                timer_id = setTimeout(timeout, time_limit);\r\n            }\r\n        } else {\r\n            throw make_reason(factory_name, \"Bad time limit.\", time_limit);\r\n        }\r\n    }\r\n\r\n// If we are doing 'race' or 'parallel', we want to start all of the requestors\r\n// at wunce. However, if there is a 'throttle' in place then we start as many\r\n// as the 'throttle' allows, and then as each requestor finishes, another is\r\n// started.\r\n\r\n// The 'sequence' and 'fallback' factories set 'throttle' to 1 because they\r\n// process wun at a time and always start another requestor when the\r\n// previous requestor finishes.\r\n\r\n    if (!Number.isSafeInteger(throttle) || throttle < 0) {\r\n        throw make_reason(factory_name, \"Bad throttle.\", throttle);\r\n    }\r\n    let repeat = Math.min(throttle || Infinity, requestor_array.length);\r\n    while (repeat > 0) {\r\n        setTimeout(start_requestor, 0, initial_value);\r\n        repeat -= 1;\r\n    }\r\n\r\n// We return 'cancel' which allows the requestor to cancel this work.\r\n\r\n    return cancel;\r\n}\r\n\r\n// The factories ///////////////////////////////////////////////////////////////\r\n\r\nfunction parallel(\r\n    required_array,\r\n    optional_array,\r\n    time_limit,\r\n    time_option,\r\n    throttle,\r\n    factory_name = \"parallel\"\r\n) {\r\n\r\n// The parallel factory is the most complex of these factories. It can take\r\n// a second array of requestors that get a more forgiving failure policy.\r\n// It returns a requestor that produces an array of values.\r\n\r\n    let number_of_required;\r\n    let requestor_array;\r\n\r\n// There are four cases because 'required_array' and 'optional_array'\r\n// can both be empty.\r\n\r\n    if (required_array === undefined || required_array.length === 0) {\r\n        number_of_required = 0;\r\n        if (optional_array === undefined || optional_array.length === 0) {\r\n\r\n// If both are empty, then there is probably a mistake.\r\n\r\n            throw make_reason(\r\n                factory_name,\r\n                \"Missing requestor array.\",\r\n                required_array\r\n            );\r\n        }\r\n\r\n// If there is only 'optional_array', then it is the 'requestor_array'.\r\n\r\n        requestor_array = optional_array;\r\n        time_option = true;\r\n    } else {\r\n\r\n// If there is only 'required_array', then it is the 'requestor_array'.\r\n\r\n        number_of_required = required_array.length;\r\n        if (optional_array === undefined || optional_array.length === 0) {\r\n            requestor_array = required_array;\r\n            time_option = undefined;\r\n\r\n// If both arrays are provided, we concatenate them together.\r\n\r\n        } else {\r\n            requestor_array = required_array.concat(optional_array);\r\n            if (time_option !== undefined && typeof time_option !== \"boolean\") {\r\n                throw make_reason(\r\n                    factory_name,\r\n                    \"Bad time_option.\",\r\n                    time_option\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n// We check the array and return the requestor.\r\n\r\n    check_requestor_array(requestor_array, factory_name);\r\n    return function parallel_requestor(callback, initial_value) {\r\n        check_callback(callback, factory_name);\r\n        let number_of_pending = requestor_array.length;\r\n        let number_of_pending_required = number_of_required;\r\n        let results = [];\r\n\r\n// 'run' gets it started.\r\n\r\n        let cancel = run(\r\n            factory_name,\r\n            requestor_array,\r\n            initial_value,\r\n            function parallel_action(value, reason, number) {\r\n\r\n// The action function gets the result of each requestor in the array.\r\n// 'parallel' wants to return an array of all of the values it sees.\r\n\r\n                results[number] = value;\r\n                number_of_pending -= 1;\r\n\r\n// If the requestor was wun of the requireds, make sure it was successful.\r\n// If it failed, then the parallel operation fails. If an optionals requestor\r\n// fails, we can still continue.\r\n\r\n                if (number < number_of_required) {\r\n                    number_of_pending_required -= 1;\r\n                    if (value === undefined) {\r\n                        cancel(reason);\r\n                        callback(undefined, reason);\r\n                        callback = undefined;\r\n                        return;\r\n                    }\r\n                }\r\n\r\n// If all have been processed, or if the requireds have all succeeded\r\n// and we do not have a 'time_option', then we are done.\r\n\r\n                if (\r\n                    number_of_pending < 1\r\n                    || (\r\n                        time_option === undefined\r\n                        && number_of_pending_required < 1\r\n                    )\r\n                ) {\r\n                    cancel(make_reason(factory_name, \"Optional.\"));\r\n                    callback(\r\n                        factory_name === \"sequence\"\r\n                        ? results.pop()\r\n                        : results\r\n                    );\r\n                    callback = undefined;\r\n                }\r\n            },\r\n            function parallel_timeout() {\r\n\r\n// When the timer fires, work stops unless we were under the 'false'\r\n// time option. The 'false' time option puts no time limits on the\r\n// requireds, allowing the optionals to run until the requireds finish\r\n// or the time expires, whichever happens last.\r\n\r\n                const reason = make_reason(\r\n                    factory_name,\r\n                    \"Timeout.\",\r\n                    time_limit\r\n                );\r\n                if (time_option === false) {\r\n                    time_option = undefined;\r\n                    if (number_of_pending_required < 1) {\r\n                        cancel(reason);\r\n                        callback(results);\r\n                    }\r\n                } else {\r\n\r\n// Time has expired. If all of the requireds were successful,\r\n// then the parallel operation is successful.\r\n\r\n                    cancel(reason);\r\n                    if (number_of_pending_required < 1) {\r\n                        callback(results);\r\n                    } else {\r\n                        callback(undefined, reason);\r\n                    }\r\n                    callback = undefined;\r\n                }\r\n            },\r\n            time_limit,\r\n            throttle\r\n        );\r\n        return cancel;\r\n    };\r\n}\r\n\r\nfunction parallel_object(\r\n    required_object,\r\n    optional_object,\r\n    time_limit,\r\n    time_option,\r\n    throttle\r\n) {\r\n\r\n// 'parallel_object' is similar to 'parallel' except that it takes and\r\n// produces objects of requestors instead of arrays of requestors. This\r\n// factory converts the objects to arrays, and the requestor it returns\r\n// turns them back again. It lets 'parallel' do most of the work.\r\n\r\n    const names = [];\r\n    let required_array = [];\r\n    let optional_array = [];\r\n\r\n// Extract the names and requestors from 'required_object'.\r\n// We only collect functions with an arity of 1 or 2.\r\n\r\n    if (required_object) {\r\n        if (typeof required_object !== \"object\") {\r\n            throw make_reason(\r\n                \"parallel_object\",\r\n                \"Type mismatch.\",\r\n                required_object\r\n            );\r\n        }\r\n        Object.keys(required_object).forEach(function (name) {\r\n            let requestor = required_object[name];\r\n            if (\r\n                typeof requestor === \"function\"\r\n                && (requestor.length === 1 || requestor.length === 2)\r\n            ) {\r\n                names.push(name);\r\n                required_array.push(requestor);\r\n            }\r\n        });\r\n    }\r\n\r\n// Extract the names and requestors from 'optional_object'.\r\n// Look for duplicate keys.\r\n\r\n    if (optional_object) {\r\n        if (typeof optional_object !== \"object\") {\r\n            throw make_reason(\r\n                \"parallel_object\",\r\n                \"Type mismatch.\",\r\n                optional_object\r\n            );\r\n        }\r\n        Object.keys(optional_object).forEach(function (name) {\r\n            let requestor = optional_object[name];\r\n            if (\r\n                typeof requestor === \"function\"\r\n                && (requestor.length === 1 || requestor.length === 2)\r\n            ) {\r\n                if (required_object && required_object[name] !== undefined) {\r\n                    throw make_reason(\r\n                        \"parallel_object\",\r\n                        \"Duplicate name.\",\r\n                        name\r\n                    );\r\n                }\r\n                names.push(name);\r\n                optional_array.push(requestor);\r\n            }\r\n        });\r\n    }\r\n\r\n// Make sure that we harvested something.\r\n\r\n    if (names.length === 0) {\r\n        return make_reason(\r\n            \"parallel_object\",\r\n            \"No requestors.\",\r\n            required_object\r\n        );\r\n    }\r\n\r\n// Call parallel to get a requestor.\r\n\r\n    const parallel_requestor = parallel(\r\n        required_array,\r\n        optional_array,\r\n        time_limit,\r\n        time_option,\r\n        throttle,\r\n        \"parallel_object\"\r\n    );\r\n\r\n// Return the parallel object requestor.\r\n\r\n    return function parallel_object_requestor(callback, initial_value) {\r\n\r\n// When our requestor is called, we return the result of our parallel requestor.\r\n\r\n        return parallel_requestor(\r\n\r\n// We pass our callback to the parallel requestor,\r\n// converting its value into an object.\r\n\r\n            function parallel_object_callback(value, reason) {\r\n                if (value === undefined) {\r\n                    return callback(undefined, reason);\r\n                }\r\n                const object = Object.create(null);\r\n                names.forEach(function (name, index) {\r\n                    object[name] = value[index];\r\n                });\r\n                return callback(object);\r\n            },\r\n            initial_value\r\n        );\r\n    };\r\n}\r\n\r\nfunction race(requestor_array, time_limit, throttle) {\r\n\r\n// The 'race' factory returns a requestor that starts all of the\r\n// requestors in 'requestor_array' at wunce. The first success wins.\r\n\r\n    const factory_name = (\r\n        throttle === 1\r\n        ? \"fallback\"\r\n        : \"race\"\r\n    );\r\n\r\n    check_requestor_array(requestor_array, factory_name);\r\n    return function race_requestor(callback, initial_value) {\r\n        check_callback(callback, factory_name);\r\n        let number_of_pending = requestor_array.length;\r\n        let cancel = run(\r\n            factory_name,\r\n            requestor_array,\r\n            initial_value,\r\n            function race_action(value, reason, number) {\r\n                number_of_pending -= 1;\r\n\r\n// We have a winner. Cancel the losers and pass the value to the 'callback'.\r\n\r\n                if (value !== undefined) {\r\n                    cancel(make_reason(factory_name, \"Loser.\", number));\r\n                    callback(value);\r\n                    callback = undefined;\r\n                }\r\n\r\n// There was no winner. Signal a failure.\r\n\r\n                if (number_of_pending < 1) {\r\n                    cancel(reason);\r\n                    callback(undefined, reason);\r\n                    callback = undefined;\r\n                }\r\n            },\r\n            function race_timeout() {\r\n                let reason = make_reason(\r\n                    factory_name,\r\n                    \"Timeout.\",\r\n                    time_limit\r\n                );\r\n                cancel(reason);\r\n                callback(undefined, reason);\r\n                callback = undefined;\r\n            },\r\n            time_limit,\r\n            throttle\r\n        );\r\n        return cancel;\r\n    };\r\n}\r\n\r\nfunction fallback(requestor_array, time_limit) {\r\n\r\n// The 'fallback' factory returns a requestor that tries each requestor\r\n// in 'requestor_array', wun at a time, until it finds a successful wun.\r\n\r\n    return race(requestor_array, time_limit, 1);\r\n}\r\n\r\nfunction sequence(requestor_array, time_limit) {\r\n\r\n// A sequence runs each requestor in order, passing results to the next,\r\n// as long as they are all successful. A sequence is a throttled parallel.\r\n\r\n    return parallel(\r\n        requestor_array,\r\n        undefined,\r\n        time_limit,\r\n        undefined,\r\n        1,\r\n        \"sequence\"\r\n    );\r\n\r\n}\r\n\r\nexport default Object.freeze({\r\n    fallback,\r\n    parallel,\r\n    parallel_object,\r\n    race,\r\n    sequence\r\n});\r\n","// Component name, File name\nexport default {\n  \"Brand intro\": \"brand_intro\"\n};\n// \"product_listing\",\n// \"product_variant_selector\",\n// \"menu\",\n// \"confirm_order_inputs\",\n// \"create_account\",\n// \"end_interaction\",\n// \"first_name\",\n// \"last_name\",\n// \"order_confirmation\",\n// \"password\",\n// \"shipping_address\",\n// \"shipping_method\",\n// \"sign_in_or_guest\",\n// \"username\",\n// \"verify_email\",\n// \"explain_experience\",\n// \"explain_experience_2\",\n// \"review_cart\",\n// \"apply_promo_code\",\n// \"select_account_mode\",\n// \"select_shipping_address\",\n// \"select_shipping_method\",\n// \"select_payment_method\",\n// \"verify_order\"\n","<script>\n  import { onMount, setContext } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import parseq from \"./lib/parseq.js\";\n  // import I from \"./interaction_components\";\n  import MenuButton from \"./lib/menu_button.svelte\";\n  import ResultsVisualizer from \"./lib/results_visualizer.svelte\";\n  import RulesVisualizer from \"./lib/rules_visualizer.svelte\";\n  import ProgramVisualizer from \"./lib/program_visualizer.svelte\";\n  import component_list from \"./component_list\";\n  // Separate repos for Activities\n\n  const { fallback, sequence } = parseq;\n  const either = arr => fallback(arr.map(s => WidgetFactory(s)));\n  const step_thru = arr => sequence(arr.map(s => WidgetFactory(s)));\n  // AST: JSON to functions Editing a program in the browser.\n  const initial_sequence = [\n    // \"Menu\",\n    \"Brand intro\"\n    // \"Explain experience\",\n    // \"Product listing\",\n    // \"Product variant selector\",\n    // \"Explain experience part 2\",\n    // \"Review cart\",\n    // \"Apply promo code\",\n    // \"Select account mode\",\n    // \"Select shipping address\",\n    // \"Select shipping method\",\n    // \"Select payment method\",\n    // \"Verify order\"\n  ];\n  // const interactions = {\n  //   \"Select account mode\": either([\n  //     \"Sign in or create account\",\n  //     \"Proceed as guest\" // + retry sign-in button (?)\n  //   ]),\n  //   \"Sign in or create account\": step_thru([\n  //     \"Enter username\", // checks if the username exists in the DB\n  //     \"Submit password\" // sign in or create an account // reply we sent you email confirmation\n  //   ]),\n  //   // Select from saved\n  //   \"Select shipping address\": step_thru([\n  //     \"Enter first and last name\",\n  //     \"Enter shipping address\",\n  //     \"Enter phone number\",\n  //     \"Enter email address\",\n  //     \"Sign up for newsletter\", // submits form to backend\n  //     either([\"Verify shipping\", \"Select shipping address\"])\n  //   ]),\n  //   \"Select shipping method\": false, // submits form to backend\n  //   \"Select payment method\": either([\n  //     \"Pay with PayPal\",\n  //     \"Pay with a credit card\"\n  //   ]),\n  //   \"Pay with a credit card\": step_thru([\n  //     \"Enter name on card\",\n  //     \"Enter credit card number\",\n  //     \"Enter expiration MM/YY\",\n  //     \"Enter security code CVV\",\n  //     either([\n  //       \"Use shipping address as billing address\",\n  //       \"Enter billing address\"\n  //     ])\n  //   ]),\n  //   \"Verify order\": false, // e.g.: click \"Edit shipping method\" adds an 'Select shipping method' before this one.\n  //   \"Order confirmation\": false\n  // };\n  const rule_set = writable([\n    {\n      condition: \"customer has not seen explanation\",\n      action: \"add Explain experience next\"\n    },\n    {\n      condition: \"any cart.item is shippable\",\n      action: \"add shipping address before Select payment method\"\n    },\n    {\n      condition:\n        \"any cart.item is rated mature and age verification is missing\",\n      action: \"add age verification next\"\n    }\n  ]);\n  const main_sequence = writable(initial_sequence);\n  const loaded_widgets = writable({});\n  const widget_sequence = derived(\n    [main_sequence, loaded_widgets],\n    ({ 0: main_sequence, 1: loaded_widgets }) => {\n      return main_sequence.map(widget_name => {\n        if ($loaded_widgets[widget_name]) {\n          return WidgetFactory(widget_name);\n        } else {\n          WidgetLoader(widget_name);\n          \n          return function(callback, value) {\n            console.log(\"Placeholder requestor function\");\n          };\n        }\n      });\n    }\n  );\n\n  // Put widget instances into Parseq\n  widget_sequence.subscribe(ws => {\n    \n    ws;\n    sequence(ws)(show_end_of_sequence, {});\n    // For example sequence(initial_sequence_array)(\"End\");\n    // sequence(ws)(() => {\n    //   console.log(\"The top-level sequence should not end.\");\n    // });\n  });\n  const ComponentRef = writable();\n\n  let callback;\n\n  function WidgetLoader(bundle_name) {\n    const file_name = component_list[bundle_name];\n    // For example /bundles/brand_intro.js\n    return import(`/bundles/${file_name}.js`)\n      .then(loaded_component => {\n        // debugger;\n        if (loaded_component) {\n          loaded_widgets.update(obj => {\n            const newObj = {};\n            newObj[bundle_name] = loaded_component;\n            return Object.assign({}, obj, newObj);\n          });\n        }\n      })\n      .catch(message => {\n        console.log(\"Failed to fetch activity\", message);\n      });\n  }\n\n  function WidgetFactory(bundle_name) {\n    console.log(\"WidgetFactory calls component_requestor\", bundle_name);\n    return function component_requestor(cb, output_from_caller) {\n      // ComponentRef.set(I[name]);\n      // TODO These \"globals\" are a bit of a problem...\n\n      ComponentRef.set($loaded_widgets[bundle_name]);\n      callback = cb;\n    };\n  }\n  function show_end_of_sequence(value, reason) {\n    // Our program may never \"ends\",\n    // rather it loop onto itself from Order Confirmation\n    // to Continue Shopping.\n  }\n  const state = writable({\n    // initial_key: \"initial_value\"\n  });\n\n  // function go_to(event) {\n  //   const component_name = this.innerText;\n  //   console.log(component_name);\n  //   // ComponentRef.set(I[component_name]);\n  //   if (loaded_widgets[bundle_name]) {\n  //     ComponentRef.set(loaded_widgets[bundle_name]);\n  //   } else {\n  //     console.log(bundle_name, \" has not loaded yet.\");\n  //   }\n  // }\n\n  // function x(s) {\n  //   console.log(\"get x\", s, interactions);\n  //   if (typeof interactions[s] === \"function\") return interactions[s];\n  //   // if (components[s]) return components[s];\n  //   throw new Error(`Please create interaction \"${s}\"`);\n  // }\n</script>\n\n<style>\n  /* TODO these globals need to be scoped */\n  /* :global(form) {\n    position: absolute;\n    left: auto;\n    right: auto;\n    padding: 1rem;\n    max-width: 40rem;\n    display: none;\n    transform: translateY(100vh);\n  }\n  :global(form.active) {\n    display: block;\n    animation: scroll-in ease-out 0.6s;\n    transform: translateY(0vh);\n  } */\n  /* :global(form.complete) {\n    display: block;\n    animation: scroll-out ease-out 0.6s;\n    transform: translateY(-100vh);\n  } */\n  /* @keyframes scroll-in {\n    0% {\n      transform: translateY(100vh);\n    }\n    1% {\n      display: block;\n    }\n    100% {\n      display: block;\n      transform: translateY(0);\n    }\n  }\n  @keyframes scroll-out {\n    0% {\n      display: block;\n      transform: translateY(0);\n    }\n    99% {\n      display: block;\n    }\n    100% {\n      transform: translateY(-100vh);\n      /* rotateX(90deg) translateY(-100%) * /\n      display: none;\n    }\n  } */\n</style>\n\n<!-- \nimport SvelteComponent from \"svelte_component\";\n<SvelteComponent />\n -->\n\n<!--  \n<MenuButton callback={()=>alert('TODO show menu')} />\n -->\n\n{#if $ComponentRef}\n  <!-- TODO https://www.brianstorti.com/the-actor-model/\nthis explore if this needs to be an iframe  so that we can \nlet it crash, and have this app refresh the contents \nto stable state.\nOr an import(file.js)?\n -->\n  Did you load yet?\n  <svelte:component this={$ComponentRef} />\n  <!-- <svelte:component this={$ComponentRef} {callback} props={state} /> -->\n{:else}\n  <div style=\"color:red;padding:1rem;background:white\">\n    Please configure component \"{$main_sequence[0]}\"\n  </div>\n{/if}\n\n<!-- if debugging -->\n<!-- <ResultsVisualizer {state} />\n<RulesVisualizer {rule_set} />\n<ProgramVisualizer {main_sequence} {go_to} /> -->\n<!-- fi debugging -->\n","import app from \"./app.svelte\";\n\nexport default new app({\n  target: document.getElementById(\"actor\")\n});\n"],"names":["run","app"],"mappings":"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"}